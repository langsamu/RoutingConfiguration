<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="routing" type="langsamu.Web.Routing.Configuration.RoutingSection" />
  </configSections>

  <routing routeExistingFiles="false">
    <routes>
      <!-- Ignore URL patterns used by ASP.NET -->
      <add type="Ignore" url="{resource}.axd/{*pathInfo}" />

      <!-- Home page route, the URL Pattern is an empty string -->
      <add type="PhysicalFile" name="Home" url="" physicalFile="~/App_Pages/Home.aspx" />

      <!-- A route to test segment values, defaults and data tokens -->
      <add type="PhysicalFile" name="TestValues" url="test-values/{segment1}/{segment2}" physicalFile="~/App_Pages/TestValues.aspx">
        <defaults segment2="segment-2-default-value" />
        <tokens token1="token-1-value" token2="token-2-value" />
      </add>

      <!-- A route to test constraints -->
      <!-- It should only work if segment 1 is "foo" or "bar" and segment 2 is even -->
      <add type="PhysicalFile" name="TestConstraints" url="test-constraints/{segment1}/{segment2}" physicalFile="~/App_Pages/TestValues.aspx">
        <constraints>
          <add name="segment1" regex="^foo|bar$" />
          <add name="segment2" type="Sample.SampleConstraint1, Sample" />
        </constraints>
      </add>

      <!-- A route using an IRouteHandler -->
      <add type="IRouteHandler" name="TestHandler1" url="test-handler1/{segment1}/{segment2}" handler="Sample.SampleRouteHandler1, Sample">
        <defaults segment2="segment-2-default-value" />
        <tokens token1="token-1-value" token2="token-2-value" />
      </add>

      <!-- A route using an IRouteHandler derived class that takes parameters to initialize -->
      <!-- and a constraint that takes parameters to initialize -->
      <!-- It should only work if p3 is odd -->
      <add type="IRouteHandler" name="TestHandler2" url="test-handler2" handler="Sample.SampleRouteHandler2, Sample">
        <parameters p1="1" p2="2" />
        <constraints>
          <add name="" type="Sample.SampleConstraint2, Sample">
            <parameters p3="1" />
          </add>
        </constraints>
      </add>

      <!-- A route using a RouteBase -->
      <!-- This rule will apply to all uncaught URLs -->
      <!-- Also demonstrates passing constructor arguments to the instance created -->
      <add type="RouteBase" name="TestRouteBase" route="Sample.SampleRoute1, Sample">
        <parameters param1="param-1-value" param2="param-2-value" />
      </add>

      <!-- An MVC route -->
      <!--
      <add type="Mvc" name="Default" url="{controller}/{action}/{id}">
        <defaults controller="Home" action="Index" id="" />
      </add>
      -->
    </routes>

    <!-- An MVC route -->
    <!--
    <providers>
      <add name="SampleRouteProvider" type="Sample.SampleRouteProvider, Sample" SampleProperty="sample-property-value" />
    </providers>
    -->
  </routing>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <system.webServer>
    <handlers>
      <!-- Used to disable direct access to routed pages -->
      <add name="HidePages" path="App_Pages/*.aspx" verb="*" type="System.Web.HttpNotFoundHandler" />
    </handlers>

    <!-- Required to enable routing on non-ASP.NET extension (or extensionless requests) -->
    <modules runAllManagedModulesForAllRequests="true">

      <!-- Registers the routes -->
      <add name="RouteManager" type="langsamu.Web.Routing.RoutingModule"/>
    </modules>

  </system.webServer>
</configuration>