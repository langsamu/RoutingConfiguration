<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="routing" type="langsamu.Web.Routing.Configuration.RoutingSection" />
  </configSections>

  <routing routeExistingFiles="false">
    <routes>
      <!-- Ignore URL patterns used by ASP.NET -->
      <add type="Ignore" url="{resource}.axd/{*pathInfo}" />

      <!-- Home page route, the URL Pattern is an empty string -->
      <add type="PhysicalFile" name="Home" url="" physicalFile="~/App_Pages/Home.aspx" />

      <!-- A route to test segment values, defaults and data tokens -->
      <add type="PhysicalFile" name="TestValues" url="test-values/{segment1}/{segment2}" physicalFile="~/App_Pages/TestValues.aspx">
        <defaults segment2="segment-2-default-value" />
        <tokens token1="token-1-value" token2="token-2-value" />
      </add>

      <!-- A route to test constraints -->
      <!-- It should only work if segment 1 is "foo" or "bar" and segment 2 is even -->
      <add type="PhysicalFile" name="TestConstraints" url="test-constraints/{segment1}/{segment2}" physicalFile="~/App_Pages/TestValues.aspx">
        <constraints>
          <add name="segment1" regex="^foo|bar$" />
          <add name="segment2" type="Sample.SampleConstraint1, Sample" />
        </constraints>
      </add>

      <!-- A route using an IRouteHandler -->
      <add type="IRouteHandler" name="TestHandler1" url="test-handler1/{segment1}/{segment2}" handler="Sample.SampleRouteHandler1, Sample">
        <defaults segment2="segment-2-default-value" />
        <tokens token1="token-1-value" token2="token-2-value" />
      </add>

      <!-- A route using an IRouteHandler derived class that takes parameters to initialize -->
      <!-- and a constraint that takes parameters to initialize -->
      <!-- It should only work if p3 is odd -->
      <add type="IRouteHandler" name="TestHandler2" url="test-handler2" handler="Sample.SampleRouteHandler2, Sample">
        <parameters p1="1" p2="2" />
        <constraints>
          <add name="" type="Sample.SampleConstraint2, Sample">
            <parameters p3="1" />
          </add>
        </constraints>
      </add>

      <!-- An MVC route -->
      <add type="Mvc" name="Default" url="mvc/{controller}/{action}/{id}">
        <defaults controller="Home" action="Index" id="" />
        <namespaces>
          <add namespace="Sample.Controllers"/>
        </namespaces>
      </add>

      <!-- A route using a RouteBase -->
      <!-- This rule will apply to all uncaught URLs -->
      <!-- Also demonstrates passing constructor arguments to the instance created -->
      <add type="RouteBase" name="TestRouteBase" route="Sample.SampleRoute1, Sample">
        <parameters param1="param-1-value" param2="param-2-value" />
      </add>
    </routes>

    <!--
    <providers>
      <add name="SampleRouteProvider" type="Sample.SampleRouteProvider, Sample" SampleProperty="sample-property-value" />
    </providers>
    -->
  </routing>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  <system.web>
    <httpRuntime targetFramework="4.5" />
    <compilation debug="true" targetFramework="4.5" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="HidePages" path="App_Pages/*.aspx" verb="*" type="System.Web.HttpNotFoundHandler" />
    </handlers>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="RouteManager" type="langsamu.Web.Routing.RoutingModule"/>
    </modules>
  </system.webServer>
</configuration>